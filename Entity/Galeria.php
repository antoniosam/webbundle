<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.3 (doctrine2-annotationsf3) on 2019-05-29 20:43:54.
 * Goto
 * https://github.com/mysql-workbench-schema-exporter/mysql-workbench-schema-exporter
 * for more information.
 */

namespace Ast\WebBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;


/**
 * Ast\WebBundle\Entity\Galeria
 *
 * @ORM\Entity()
 * @ORM\Table(name="WB_Galerias")
 * @ORM\HasLifecycleCallbacks()
 */
class Galeria
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $referencia;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $nombre;

    /**
     * @ORM\Column(name="`template`", type="string", length=200, nullable=true)
     */
    protected $template;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $creado;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $actualizado;

    /**
     * @ORM\OneToMany(targetEntity="Media", mappedBy="galeria")
     * @ORM\JoinColumn(name="id", referencedColumnName="idgaleria", nullable=false)
     */
    protected $media;

    public function __construct()
    {
        $this->media = new ArrayCollection();
    }

    public function __toString()
    {
        return $this->nombre;
    }

    /**
    * Gets triggered only on insert
    * @ORM\PrePersist
    */
    public function onPrePersist(){
        $this->creado = new \DateTime("now"); 
    }

    /**
    * Gets triggered only on update
    * @ORM\PreUpdate
    */
    public function onPreUpdate(){
        $this->actualizado = new \DateTime("now"); 
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Ast\WebBundle\Entity\Galeria
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of referencia.
     *
     * @param string $referencia
     * @return \Ast\WebBundle\Entity\Galeria
     */
    public function setReferencia($referencia)
    {
        $this->referencia = $referencia;

        return $this;
    }

    /**
     * Get the value of referencia.
     *
     * @return string
     */
    public function getReferencia()
    {
        return $this->referencia;
    }

    /**
     * Set the value of nombre.
     *
     * @param string $nombre
     * @return \Ast\WebBundle\Entity\Galeria
     */
    public function setNombre($nombre)
    {
        $this->nombre = $nombre;

        return $this;
    }

    /**
     * Get the value of nombre.
     *
     * @return string
     */
    public function getNombre()
    {
        return $this->nombre;
    }

    /**
     * Set the value of template.
     *
     * @param string $template
     * @return \Ast\WebBundle\Entity\Galeria
     */
    public function setTemplate($template)
    {
        $this->template = $template;

        return $this;
    }

    /**
     * Get the value of template.
     *
     * @return string
     */
    public function getTemplate()
    {
        return $this->template;
    }

    /**
     * Set the value of creado.
     *
     * @param \DateTime $creado
     * @return \Ast\WebBundle\Entity\Galeria
     */
    public function setCreado($creado)
    {
        $this->creado = $creado;

        return $this;
    }

    /**
     * Get the value of creado.
     *
     * @return \DateTime
     */
    public function getCreado()
    {
        return $this->creado;
    }

    /**
     * Set the value of actualizado.
     *
     * @param \DateTime $actualizado
     * @return \Ast\WebBundle\Entity\Galeria
     */
    public function setActualizado($actualizado)
    {
        $this->actualizado = $actualizado;

        return $this;
    }

    /**
     * Get the value of actualizado.
     *
     * @return \DateTime
     */
    public function getActualizado()
    {
        return $this->actualizado;
    }

    /**
     * Add Media entity to collection (one to many).
     *
     * @param \Ast\WebBundle\Entity\Media $media
     * @return \Ast\WebBundle\Entity\Galeria
     */
    public function addMedia(Media $media)
    {
        $this->media[] = $media;

        return $this;
    }

    /**
     * Remove Media entity from collection (one to many).
     *
     * @param \Ast\WebBundle\Entity\Media $media
     * @return \Ast\WebBundle\Entity\Galeria
     */
    public function removeMedia(Media $media)
    {
        $this->media->removeElement($media);

        return $this;
    }

    /**
     * Get Media entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getMedia()
    {
        return $this->media;
    }

    public function __sleep()
    {
        return array('id', 'referencia', 'nombre', 'template', 'creado', 'actualizado');
    }
}